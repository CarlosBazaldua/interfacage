#include <mbed.h>
#include <threadLvgl.h>
#include "demos/lv_demos.h"
#include <cstdio>

ThreadLvgl threadLvgl(30);

DigitalOut led1(D2); //R
DigitalOut led2(D3); //W
DigitalIn capteur(A0);
DigitalOut ledcarte1(LED1);
Timer t;
int compteur ; 
Ticker vitesseTicker; 
//LowPowerTicker eraseTicker; 

// Fonction de rappel pour le premier bouton LVGL
static void btn_event_cb1 (lv_event_t * e) {
    led2 = !led2;
    
}


class Counter {
public:
    Counter(PinName pin) : _interrupt(pin) {        // create the InterruptIn on the pin specified to Counter
        _interrupt.rise(callback(this, &Counter::increment)); // attach increment function of this counter instance 
    }
    
    void increment() {   
        _count++;
        //chrono();
    }
   

    void reset()
    {
        _count=0; 
    }
    int read() {
        return _count;
    }

private:
    InterruptIn _interrupt;
    volatile int _count;
};

Counter counter (A0);

// Fonction de rappel pour le deuxième bouton LVGL
static void btn_event_cb2 (lv_event_t * e) {
    led1 = !led1;
}

float vitesse;
volatile bool flagVitesse = false;

void calculVitesse() {
    int nbtours = counter.read();
    vitesse = 3.14*static_cast<float>(nbtours)*0.2 ;//distance au centre du capteur = 10 cm 
    vitesse = vitesse *3.6;

    flagVitesse = true;
    counter.reset();
}
void reset(){
    counter.reset();
}

int main() {
    led1 = 0;//w
    led2 = 0;//r
    
    // Initialiser LVGL
    threadLvgl.lock();
      // Créer un premier bouton sur l'écran pour allumer la led embarquée
    lv_obj_t * btn1 = lv_btn_create(lv_scr_act());
    lv_obj_set_pos(btn1, 50, 50);
    lv_obj_set_size(btn1, 120, 50);
    lv_obj_add_event_cb(btn1, btn_event_cb1, LV_EVENT_CLICKED, NULL);
    lv_obj_t * label1 = lv_label_create(btn1);
    lv_label_set_text(label1, "Frontale");
    lv_obj_center(label1);
     // Créer un deuxième bouton sur l'écran pour eteindr la led embarquée
    lv_obj_t * btn2 = lv_btn_create(lv_scr_act());
    lv_obj_set_pos(btn2, 50, 150);
    lv_obj_set_size(btn2, 120, 50);
    lv_obj_add_event_cb(btn2, btn_event_cb2, LV_EVENT_CLICKED, NULL);
    lv_obj_t * label2 = lv_label_create(btn2);
    lv_label_set_text(label2, "Feu arriere");
    lv_obj_center(label2);

    lv_obj_t *label4 = lv_label_create(lv_scr_act());
    lv_obj_set_pos(label4, 50, 210);
    
    
    threadLvgl.unlock();
    vitesseTicker.attach(&calculVitesse, 1s);
    //eraseTicker.attach(&reset, 1100ms);
    
    while (1) {
       if (flagVitesse) {
            flagVitesse = false;
            threadLvgl.lock();
            lv_label_set_text_fmt(label4, "vitesse en km/h =  %f ",vitesse);
            threadLvgl.unlock();
       }
        ThisThread::sleep_for(10ms);
    }
}

